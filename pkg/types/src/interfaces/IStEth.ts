/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface IStEthInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "getCurrentStakeLimit"
      | "getPooledEthByShares"
      | "getSharesByPooledEth"
      | "sharesOf"
      | "submit"
      | "transferShares"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getCurrentStakeLimit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPooledEthByShares",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getSharesByPooledEth",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "sharesOf",
    values: [AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "submit", values: [AddressLike]): string;
  encodeFunctionData(
    functionFragment: "transferShares",
    values: [AddressLike, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "getCurrentStakeLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPooledEthByShares",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSharesByPooledEth",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "sharesOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "submit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferShares",
    data: BytesLike
  ): Result;
}

export interface IStEth extends BaseContract {
  connect(runner?: ContractRunner | null): IStEth;
  waitForDeployment(): Promise<this>;

  interface: IStEthInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getCurrentStakeLimit: TypedContractMethod<[], [bigint], "view">;

  getPooledEthByShares: TypedContractMethod<
    [_sharesAmount: BigNumberish],
    [bigint],
    "view"
  >;

  getSharesByPooledEth: TypedContractMethod<
    [_stEthAmount: BigNumberish],
    [bigint],
    "view"
  >;

  sharesOf: TypedContractMethod<[_account: AddressLike], [bigint], "view">;

  submit: TypedContractMethod<[_referral: AddressLike], [bigint], "payable">;

  transferShares: TypedContractMethod<
    [_recipient: AddressLike, _sharesAmount: BigNumberish],
    [bigint],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "getCurrentStakeLimit"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getPooledEthByShares"
  ): TypedContractMethod<[_sharesAmount: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getSharesByPooledEth"
  ): TypedContractMethod<[_stEthAmount: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "sharesOf"
  ): TypedContractMethod<[_account: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "submit"
  ): TypedContractMethod<[_referral: AddressLike], [bigint], "payable">;
  getFunction(
    nameOrSignature: "transferShares"
  ): TypedContractMethod<
    [_recipient: AddressLike, _sharesAmount: BigNumberish],
    [bigint],
    "nonpayable"
  >;

  filters: {};
}
