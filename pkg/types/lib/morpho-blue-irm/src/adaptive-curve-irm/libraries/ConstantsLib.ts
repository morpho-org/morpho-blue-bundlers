/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../../../common";

export interface ConstantsLibInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "ADJUSTMENT_SPEED"
      | "CURVE_STEEPNESS"
      | "INITIAL_RATE_AT_TARGET"
      | "MAX_RATE_AT_TARGET"
      | "MIN_RATE_AT_TARGET"
      | "TARGET_UTILIZATION"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "ADJUSTMENT_SPEED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CURVE_STEEPNESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INITIAL_RATE_AT_TARGET",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_RATE_AT_TARGET",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MIN_RATE_AT_TARGET",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TARGET_UTILIZATION",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "ADJUSTMENT_SPEED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CURVE_STEEPNESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INITIAL_RATE_AT_TARGET",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_RATE_AT_TARGET",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MIN_RATE_AT_TARGET",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "TARGET_UTILIZATION",
    data: BytesLike
  ): Result;
}

export interface ConstantsLib extends BaseContract {
  connect(runner?: ContractRunner | null): ConstantsLib;
  waitForDeployment(): Promise<this>;

  interface: ConstantsLibInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  ADJUSTMENT_SPEED: TypedContractMethod<[], [bigint], "view">;

  CURVE_STEEPNESS: TypedContractMethod<[], [bigint], "view">;

  INITIAL_RATE_AT_TARGET: TypedContractMethod<[], [bigint], "view">;

  MAX_RATE_AT_TARGET: TypedContractMethod<[], [bigint], "view">;

  MIN_RATE_AT_TARGET: TypedContractMethod<[], [bigint], "view">;

  TARGET_UTILIZATION: TypedContractMethod<[], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "ADJUSTMENT_SPEED"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "CURVE_STEEPNESS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "INITIAL_RATE_AT_TARGET"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_RATE_AT_TARGET"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MIN_RATE_AT_TARGET"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "TARGET_UTILIZATION"
  ): TypedContractMethod<[], [bigint], "view">;

  filters: {};
}
