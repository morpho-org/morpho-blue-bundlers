/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IIrm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIrm__factory>;
    getContractFactory(
      name: "IMorpho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorpho__factory>;
    getContractFactory(
      name: "IMorphoBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoBase__factory>;
    getContractFactory(
      name: "IMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoStaticTyping__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Ownable2Step",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable2Step__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "ERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC4626__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "Math",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Math__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "Nonces",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Nonces__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "IMetaMorpho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMetaMorpho__factory>;
    getContractFactory(
      name: "IMetaMorphoBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMetaMorphoBase__factory>;
    getContractFactory(
      name: "IMetaMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMetaMorphoStaticTyping__factory>;
    getContractFactory(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "ErrorsLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ErrorsLib__factory>;
    getContractFactory(
      name: "EventsLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EventsLib__factory>;
    getContractFactory(
      name: "MetaMorpho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MetaMorpho__factory>;
    getContractFactory(
      name: "IIrm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIrm__factory>;
    getContractFactory(
      name: "IMorpho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorpho__factory>;
    getContractFactory(
      name: "IMorphoBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoBase__factory>;
    getContractFactory(
      name: "IMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoStaticTyping__factory>;
    getContractFactory(
      name: "AdaptiveCurveIrm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdaptiveCurveIrm__factory>;
    getContractFactory(
      name: "IAdaptiveCurveIrm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAdaptiveCurveIrm__factory>;
    getContractFactory(
      name: "ConstantsLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConstantsLib__factory>;
    getContractFactory(
      name: "IIrm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIrm__factory>;
    getContractFactory(
      name: "IMorpho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorpho__factory>;
    getContractFactory(
      name: "IMorphoBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoBase__factory>;
    getContractFactory(
      name: "IMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoStaticTyping__factory>;
    getContractFactory(
      name: "IMorphoFlashLoanCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoFlashLoanCallback__factory>;
    getContractFactory(
      name: "IMorphoLiquidateCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoLiquidateCallback__factory>;
    getContractFactory(
      name: "IMorphoRepayCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoRepayCallback__factory>;
    getContractFactory(
      name: "IMorphoSupplyCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoSupplyCallback__factory>;
    getContractFactory(
      name: "IMorphoSupplyCollateralCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoSupplyCollateralCallback__factory>;
    getContractFactory(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracle__factory>;
    getContractFactory(
      name: "EventsLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EventsLib__factory>;
    getContractFactory(
      name: "IERC20Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Internal__factory>;
    getContractFactory(
      name: "Morpho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Morpho__factory>;
    getContractFactory(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "ERC20Wrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Wrapper__factory>;
    getContractFactory(
      name: "ERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC4626__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "IAllowanceTransfer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAllowanceTransfer__factory>;
    getContractFactory(
      name: "IDAIPermit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDAIPermit__factory>;
    getContractFactory(
      name: "IEIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEIP712__factory>;
    getContractFactory(
      name: "SafeCast160",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast160__factory>;
    getContractFactory(
      name: "IIrm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIrm__factory>;
    getContractFactory(
      name: "IMorpho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorpho__factory>;
    getContractFactory(
      name: "IMorphoBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoBase__factory>;
    getContractFactory(
      name: "IMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoStaticTyping__factory>;
    getContractFactory(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IMetaMorpho",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMetaMorpho__factory>;
    getContractFactory(
      name: "IMetaMorphoBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMetaMorphoBase__factory>;
    getContractFactory(
      name: "IMetaMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMetaMorphoStaticTyping__factory>;
    getContractFactory(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IPublicAllocator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPublicAllocator__factory>;
    getContractFactory(
      name: "IPublicAllocatorBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPublicAllocatorBase__factory>;
    getContractFactory(
      name: "IPublicAllocatorStaticTyping",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPublicAllocatorStaticTyping__factory>;
    getContractFactory(
      name: "ErrorsLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ErrorsLib__factory>;
    getContractFactory(
      name: "EventsLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EventsLib__factory>;
    getContractFactory(
      name: "PublicAllocator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PublicAllocator__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IUniversalRewardsDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniversalRewardsDistributor__factory>;
    getContractFactory(
      name: "IUniversalRewardsDistributorBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniversalRewardsDistributorBase__factory>;
    getContractFactory(
      name: "IUniversalRewardsDistributorStaticTyping",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniversalRewardsDistributorStaticTyping__factory>;
    getContractFactory(
      name: "IUrdFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUrdFactory__factory>;
    getContractFactory(
      name: "EventsLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EventsLib__factory>;
    getContractFactory(
      name: "UniversalRewardsDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniversalRewardsDistributor__factory>;
    getContractFactory(
      name: "UrdFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UrdFactory__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "BaseBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseBundler__factory>;
    getContractFactory(
      name: "ChainAgnosticBundlerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainAgnosticBundlerV2__factory>;
    getContractFactory(
      name: "ERC20WrapperBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20WrapperBundler__factory>;
    getContractFactory(
      name: "ERC4626Bundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC4626Bundler__factory>;
    getContractFactory(
      name: "EthereumBundlerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EthereumBundlerV2__factory>;
    getContractFactory(
      name: "EthereumPermitBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EthereumPermitBundler__factory>;
    getContractFactory(
      name: "EthereumStEthBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EthereumStEthBundler__factory>;
    getContractFactory(
      name: "IDaiPermit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDaiPermit__factory>;
    getContractFactory(
      name: "GoerliBundlerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoerliBundlerV2__factory>;
    getContractFactory(
      name: "IMorphoBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMorphoBundler__factory>;
    getContractFactory(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall__factory>;
    getContractFactory(
      name: "IPublicAllocator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPublicAllocator__factory>;
    getContractFactory(
      name: "IStEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStEth__factory>;
    getContractFactory(
      name: "IWNative",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWNative__factory>;
    getContractFactory(
      name: "IWstEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWstEth__factory>;
    getContractFactory(
      name: "AaveV2MigrationBundlerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2MigrationBundlerV2__factory>;
    getContractFactory(
      name: "AaveV3MigrationBundlerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3MigrationBundlerV2__factory>;
    getContractFactory(
      name: "AaveV3OptimizerMigrationBundlerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3OptimizerMigrationBundlerV2__factory>;
    getContractFactory(
      name: "CompoundV2MigrationBundlerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundV2MigrationBundlerV2__factory>;
    getContractFactory(
      name: "CompoundV3MigrationBundlerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundV3MigrationBundlerV2__factory>;
    getContractFactory(
      name: "IAaveV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveV2__factory>;
    getContractFactory(
      name: "IAaveV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveV3__factory>;
    getContractFactory(
      name: "IAaveV3Optimizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveV3Optimizer__factory>;
    getContractFactory(
      name: "ICEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICEth__factory>;
    getContractFactory(
      name: "ICompoundV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICompoundV3__factory>;
    getContractFactory(
      name: "IComptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IComptroller__factory>;
    getContractFactory(
      name: "ICToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICToken__factory>;
    getContractFactory(
      name: "MigrationBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MigrationBundler__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "ERC20PermitMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PermitMock__factory>;
    getContractFactory(
      name: "ERC20WrapperMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20WrapperMock__factory>;
    getContractFactory(
      name: "ERC4626Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC4626Mock__factory>;
    getContractFactory(
      name: "IrmMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IrmMock__factory>;
    getContractFactory(
      name: "MorphoMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MorphoMock__factory>;
    getContractFactory(
      name: "OracleMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleMock__factory>;
    getContractFactory(
      name: "MorphoBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MorphoBundler__factory>;
    getContractFactory(
      name: "Permit2Bundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permit2Bundler__factory>;
    getContractFactory(
      name: "PermitBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermitBundler__factory>;
    getContractFactory(
      name: "SepoliaBundlerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SepoliaBundlerV2__factory>;
    getContractFactory(
      name: "StEthBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StEthBundler__factory>;
    getContractFactory(
      name: "TransferBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransferBundler__factory>;
    getContractFactory(
      name: "UrdBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UrdBundler__factory>;
    getContractFactory(
      name: "WNativeBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WNativeBundler__factory>;

    getContractAt(
      name: "IIrm",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IIrm>;
    getContractAt(
      name: "IMorpho",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorpho>;
    getContractAt(
      name: "IMorphoBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoBase>;
    getContractAt(
      name: "IMorphoStaticTyping",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoStaticTyping>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Ownable2Step",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable2Step>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC4626",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4626>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "ERC4626",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC4626>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "EIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "Math",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Math>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "Multicall",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "Nonces",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Nonces>;
    getContractAt(
      name: "ShortStrings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "IMetaMorpho",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMetaMorpho>;
    getContractAt(
      name: "IMetaMorphoBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMetaMorphoBase>;
    getContractAt(
      name: "IMetaMorphoStaticTyping",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMetaMorphoStaticTyping>;
    getContractAt(
      name: "IMulticall",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMulticall>;
    getContractAt(
      name: "IOwnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "ErrorsLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ErrorsLib>;
    getContractAt(
      name: "EventsLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EventsLib>;
    getContractAt(
      name: "MetaMorpho",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MetaMorpho>;
    getContractAt(
      name: "IIrm",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IIrm>;
    getContractAt(
      name: "IMorpho",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorpho>;
    getContractAt(
      name: "IMorphoBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoBase>;
    getContractAt(
      name: "IMorphoStaticTyping",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoStaticTyping>;
    getContractAt(
      name: "AdaptiveCurveIrm",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AdaptiveCurveIrm>;
    getContractAt(
      name: "IAdaptiveCurveIrm",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAdaptiveCurveIrm>;
    getContractAt(
      name: "ConstantsLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ConstantsLib>;
    getContractAt(
      name: "IIrm",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IIrm>;
    getContractAt(
      name: "IMorpho",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorpho>;
    getContractAt(
      name: "IMorphoBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoBase>;
    getContractAt(
      name: "IMorphoStaticTyping",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoStaticTyping>;
    getContractAt(
      name: "IMorphoFlashLoanCallback",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoFlashLoanCallback>;
    getContractAt(
      name: "IMorphoLiquidateCallback",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoLiquidateCallback>;
    getContractAt(
      name: "IMorphoRepayCallback",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoRepayCallback>;
    getContractAt(
      name: "IMorphoSupplyCallback",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoSupplyCallback>;
    getContractAt(
      name: "IMorphoSupplyCollateralCallback",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoSupplyCollateralCallback>;
    getContractAt(
      name: "IOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracle>;
    getContractAt(
      name: "EventsLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EventsLib>;
    getContractAt(
      name: "IERC20Internal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Internal>;
    getContractAt(
      name: "Morpho",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Morpho>;
    getContractAt(
      name: "IERC4626",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4626>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "ERC20Wrapper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Wrapper>;
    getContractAt(
      name: "ERC4626",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC4626>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "EIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "ShortStrings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "IAllowanceTransfer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAllowanceTransfer>;
    getContractAt(
      name: "IDAIPermit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDAIPermit>;
    getContractAt(
      name: "IEIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEIP712>;
    getContractAt(
      name: "SafeCast160",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast160>;
    getContractAt(
      name: "IIrm",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IIrm>;
    getContractAt(
      name: "IMorpho",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorpho>;
    getContractAt(
      name: "IMorphoBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoBase>;
    getContractAt(
      name: "IMorphoStaticTyping",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoStaticTyping>;
    getContractAt(
      name: "IERC4626",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4626>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IMetaMorpho",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMetaMorpho>;
    getContractAt(
      name: "IMetaMorphoBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMetaMorphoBase>;
    getContractAt(
      name: "IMetaMorphoStaticTyping",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMetaMorphoStaticTyping>;
    getContractAt(
      name: "IMulticall",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMulticall>;
    getContractAt(
      name: "IOwnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IPublicAllocator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPublicAllocator>;
    getContractAt(
      name: "IPublicAllocatorBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPublicAllocatorBase>;
    getContractAt(
      name: "IPublicAllocatorStaticTyping",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPublicAllocatorStaticTyping>;
    getContractAt(
      name: "ErrorsLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ErrorsLib>;
    getContractAt(
      name: "EventsLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EventsLib>;
    getContractAt(
      name: "PublicAllocator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PublicAllocator>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IUniversalRewardsDistributor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniversalRewardsDistributor>;
    getContractAt(
      name: "IUniversalRewardsDistributorBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniversalRewardsDistributorBase>;
    getContractAt(
      name: "IUniversalRewardsDistributorStaticTyping",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniversalRewardsDistributorStaticTyping>;
    getContractAt(
      name: "IUrdFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUrdFactory>;
    getContractAt(
      name: "EventsLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EventsLib>;
    getContractAt(
      name: "UniversalRewardsDistributor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UniversalRewardsDistributor>;
    getContractAt(
      name: "UrdFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UrdFactory>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "BaseBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseBundler>;
    getContractAt(
      name: "ChainAgnosticBundlerV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainAgnosticBundlerV2>;
    getContractAt(
      name: "ERC20WrapperBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20WrapperBundler>;
    getContractAt(
      name: "ERC4626Bundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC4626Bundler>;
    getContractAt(
      name: "EthereumBundlerV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EthereumBundlerV2>;
    getContractAt(
      name: "EthereumPermitBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EthereumPermitBundler>;
    getContractAt(
      name: "EthereumStEthBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EthereumStEthBundler>;
    getContractAt(
      name: "IDaiPermit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDaiPermit>;
    getContractAt(
      name: "GoerliBundlerV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GoerliBundlerV2>;
    getContractAt(
      name: "IMorphoBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMorphoBundler>;
    getContractAt(
      name: "IMulticall",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMulticall>;
    getContractAt(
      name: "IPublicAllocator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPublicAllocator>;
    getContractAt(
      name: "IStEth",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStEth>;
    getContractAt(
      name: "IWNative",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWNative>;
    getContractAt(
      name: "IWstEth",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWstEth>;
    getContractAt(
      name: "AaveV2MigrationBundlerV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV2MigrationBundlerV2>;
    getContractAt(
      name: "AaveV3MigrationBundlerV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3MigrationBundlerV2>;
    getContractAt(
      name: "AaveV3OptimizerMigrationBundlerV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3OptimizerMigrationBundlerV2>;
    getContractAt(
      name: "CompoundV2MigrationBundlerV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CompoundV2MigrationBundlerV2>;
    getContractAt(
      name: "CompoundV3MigrationBundlerV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CompoundV3MigrationBundlerV2>;
    getContractAt(
      name: "IAaveV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAaveV2>;
    getContractAt(
      name: "IAaveV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAaveV3>;
    getContractAt(
      name: "IAaveV3Optimizer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAaveV3Optimizer>;
    getContractAt(
      name: "ICEth",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ICEth>;
    getContractAt(
      name: "ICompoundV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ICompoundV3>;
    getContractAt(
      name: "IComptroller",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IComptroller>;
    getContractAt(
      name: "ICToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ICToken>;
    getContractAt(
      name: "MigrationBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MigrationBundler>;
    getContractAt(
      name: "ERC20Mock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: "ERC20PermitMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PermitMock>;
    getContractAt(
      name: "ERC20WrapperMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20WrapperMock>;
    getContractAt(
      name: "ERC4626Mock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC4626Mock>;
    getContractAt(
      name: "IrmMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IrmMock>;
    getContractAt(
      name: "MorphoMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MorphoMock>;
    getContractAt(
      name: "OracleMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleMock>;
    getContractAt(
      name: "MorphoBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MorphoBundler>;
    getContractAt(
      name: "Permit2Bundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Permit2Bundler>;
    getContractAt(
      name: "PermitBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermitBundler>;
    getContractAt(
      name: "SepoliaBundlerV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SepoliaBundlerV2>;
    getContractAt(
      name: "StEthBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StEthBundler>;
    getContractAt(
      name: "TransferBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TransferBundler>;
    getContractAt(
      name: "UrdBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UrdBundler>;
    getContractAt(
      name: "WNativeBundler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WNativeBundler>;

    deployContract(
      name: "IIrm",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIrm>;
    deployContract(
      name: "IMorpho",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorpho>;
    deployContract(
      name: "IMorphoBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoBase>;
    deployContract(
      name: "IMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoStaticTyping>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Ownable2Step",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable2Step>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4626>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "ERC4626",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC4626>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "Math",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Math>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall>;
    deployContract(
      name: "Nonces",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Nonces>;
    deployContract(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "IMetaMorpho",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorpho>;
    deployContract(
      name: "IMetaMorphoBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorphoBase>;
    deployContract(
      name: "IMetaMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorphoStaticTyping>;
    deployContract(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMulticall>;
    deployContract(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "ErrorsLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ErrorsLib>;
    deployContract(
      name: "EventsLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EventsLib>;
    deployContract(
      name: "MetaMorpho",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MetaMorpho>;
    deployContract(
      name: "IIrm",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIrm>;
    deployContract(
      name: "IMorpho",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorpho>;
    deployContract(
      name: "IMorphoBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoBase>;
    deployContract(
      name: "IMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoStaticTyping>;
    deployContract(
      name: "AdaptiveCurveIrm",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdaptiveCurveIrm>;
    deployContract(
      name: "IAdaptiveCurveIrm",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAdaptiveCurveIrm>;
    deployContract(
      name: "ConstantsLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ConstantsLib>;
    deployContract(
      name: "IIrm",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIrm>;
    deployContract(
      name: "IMorpho",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorpho>;
    deployContract(
      name: "IMorphoBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoBase>;
    deployContract(
      name: "IMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoStaticTyping>;
    deployContract(
      name: "IMorphoFlashLoanCallback",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoFlashLoanCallback>;
    deployContract(
      name: "IMorphoLiquidateCallback",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoLiquidateCallback>;
    deployContract(
      name: "IMorphoRepayCallback",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoRepayCallback>;
    deployContract(
      name: "IMorphoSupplyCallback",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoSupplyCallback>;
    deployContract(
      name: "IMorphoSupplyCollateralCallback",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoSupplyCollateralCallback>;
    deployContract(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOracle>;
    deployContract(
      name: "EventsLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EventsLib>;
    deployContract(
      name: "IERC20Internal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Internal>;
    deployContract(
      name: "Morpho",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Morpho>;
    deployContract(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4626>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "ERC20Wrapper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Wrapper>;
    deployContract(
      name: "ERC4626",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC4626>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "IAllowanceTransfer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAllowanceTransfer>;
    deployContract(
      name: "IDAIPermit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDAIPermit>;
    deployContract(
      name: "IEIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEIP712>;
    deployContract(
      name: "SafeCast160",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast160>;
    deployContract(
      name: "IIrm",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIrm>;
    deployContract(
      name: "IMorpho",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorpho>;
    deployContract(
      name: "IMorphoBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoBase>;
    deployContract(
      name: "IMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoStaticTyping>;
    deployContract(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4626>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IMetaMorpho",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorpho>;
    deployContract(
      name: "IMetaMorphoBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorphoBase>;
    deployContract(
      name: "IMetaMorphoStaticTyping",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorphoStaticTyping>;
    deployContract(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMulticall>;
    deployContract(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "IPublicAllocator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPublicAllocator>;
    deployContract(
      name: "IPublicAllocatorBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPublicAllocatorBase>;
    deployContract(
      name: "IPublicAllocatorStaticTyping",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPublicAllocatorStaticTyping>;
    deployContract(
      name: "ErrorsLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ErrorsLib>;
    deployContract(
      name: "EventsLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EventsLib>;
    deployContract(
      name: "PublicAllocator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PublicAllocator>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IUniversalRewardsDistributor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniversalRewardsDistributor>;
    deployContract(
      name: "IUniversalRewardsDistributorBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniversalRewardsDistributorBase>;
    deployContract(
      name: "IUniversalRewardsDistributorStaticTyping",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniversalRewardsDistributorStaticTyping>;
    deployContract(
      name: "IUrdFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUrdFactory>;
    deployContract(
      name: "EventsLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EventsLib>;
    deployContract(
      name: "UniversalRewardsDistributor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UniversalRewardsDistributor>;
    deployContract(
      name: "UrdFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UrdFactory>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "BaseBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseBundler>;
    deployContract(
      name: "ChainAgnosticBundlerV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainAgnosticBundlerV2>;
    deployContract(
      name: "ERC20WrapperBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20WrapperBundler>;
    deployContract(
      name: "ERC4626Bundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC4626Bundler>;
    deployContract(
      name: "EthereumBundlerV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EthereumBundlerV2>;
    deployContract(
      name: "EthereumPermitBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EthereumPermitBundler>;
    deployContract(
      name: "EthereumStEthBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EthereumStEthBundler>;
    deployContract(
      name: "IDaiPermit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDaiPermit>;
    deployContract(
      name: "GoerliBundlerV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GoerliBundlerV2>;
    deployContract(
      name: "IMorphoBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoBundler>;
    deployContract(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMulticall>;
    deployContract(
      name: "IPublicAllocator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPublicAllocator>;
    deployContract(
      name: "IStEth",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStEth>;
    deployContract(
      name: "IWNative",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWNative>;
    deployContract(
      name: "IWstEth",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWstEth>;
    deployContract(
      name: "AaveV2MigrationBundlerV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AaveV2MigrationBundlerV2>;
    deployContract(
      name: "AaveV3MigrationBundlerV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AaveV3MigrationBundlerV2>;
    deployContract(
      name: "AaveV3OptimizerMigrationBundlerV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AaveV3OptimizerMigrationBundlerV2>;
    deployContract(
      name: "CompoundV2MigrationBundlerV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CompoundV2MigrationBundlerV2>;
    deployContract(
      name: "CompoundV3MigrationBundlerV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CompoundV3MigrationBundlerV2>;
    deployContract(
      name: "IAaveV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAaveV2>;
    deployContract(
      name: "IAaveV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAaveV3>;
    deployContract(
      name: "IAaveV3Optimizer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAaveV3Optimizer>;
    deployContract(
      name: "ICEth",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICEth>;
    deployContract(
      name: "ICompoundV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICompoundV3>;
    deployContract(
      name: "IComptroller",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IComptroller>;
    deployContract(
      name: "ICToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICToken>;
    deployContract(
      name: "MigrationBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MigrationBundler>;
    deployContract(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Mock>;
    deployContract(
      name: "ERC20PermitMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20PermitMock>;
    deployContract(
      name: "ERC20WrapperMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20WrapperMock>;
    deployContract(
      name: "ERC4626Mock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC4626Mock>;
    deployContract(
      name: "IrmMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IrmMock>;
    deployContract(
      name: "MorphoMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MorphoMock>;
    deployContract(
      name: "OracleMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OracleMock>;
    deployContract(
      name: "MorphoBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MorphoBundler>;
    deployContract(
      name: "Permit2Bundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Permit2Bundler>;
    deployContract(
      name: "PermitBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermitBundler>;
    deployContract(
      name: "SepoliaBundlerV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SepoliaBundlerV2>;
    deployContract(
      name: "StEthBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StEthBundler>;
    deployContract(
      name: "TransferBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TransferBundler>;
    deployContract(
      name: "UrdBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UrdBundler>;
    deployContract(
      name: "WNativeBundler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WNativeBundler>;

    deployContract(
      name: "IIrm",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIrm>;
    deployContract(
      name: "IMorpho",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorpho>;
    deployContract(
      name: "IMorphoBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoBase>;
    deployContract(
      name: "IMorphoStaticTyping",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoStaticTyping>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Ownable2Step",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable2Step>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC4626",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4626>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "ERC4626",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC4626>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "EIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "Math",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Math>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Multicall",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall>;
    deployContract(
      name: "Nonces",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Nonces>;
    deployContract(
      name: "ShortStrings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "IMetaMorpho",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorpho>;
    deployContract(
      name: "IMetaMorphoBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorphoBase>;
    deployContract(
      name: "IMetaMorphoStaticTyping",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorphoStaticTyping>;
    deployContract(
      name: "IMulticall",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMulticall>;
    deployContract(
      name: "IOwnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "ErrorsLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ErrorsLib>;
    deployContract(
      name: "EventsLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EventsLib>;
    deployContract(
      name: "MetaMorpho",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MetaMorpho>;
    deployContract(
      name: "IIrm",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIrm>;
    deployContract(
      name: "IMorpho",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorpho>;
    deployContract(
      name: "IMorphoBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoBase>;
    deployContract(
      name: "IMorphoStaticTyping",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoStaticTyping>;
    deployContract(
      name: "AdaptiveCurveIrm",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdaptiveCurveIrm>;
    deployContract(
      name: "IAdaptiveCurveIrm",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAdaptiveCurveIrm>;
    deployContract(
      name: "ConstantsLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ConstantsLib>;
    deployContract(
      name: "IIrm",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIrm>;
    deployContract(
      name: "IMorpho",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorpho>;
    deployContract(
      name: "IMorphoBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoBase>;
    deployContract(
      name: "IMorphoStaticTyping",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoStaticTyping>;
    deployContract(
      name: "IMorphoFlashLoanCallback",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoFlashLoanCallback>;
    deployContract(
      name: "IMorphoLiquidateCallback",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoLiquidateCallback>;
    deployContract(
      name: "IMorphoRepayCallback",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoRepayCallback>;
    deployContract(
      name: "IMorphoSupplyCallback",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoSupplyCallback>;
    deployContract(
      name: "IMorphoSupplyCollateralCallback",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoSupplyCollateralCallback>;
    deployContract(
      name: "IOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOracle>;
    deployContract(
      name: "EventsLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EventsLib>;
    deployContract(
      name: "IERC20Internal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Internal>;
    deployContract(
      name: "Morpho",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Morpho>;
    deployContract(
      name: "IERC4626",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4626>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "ERC20Wrapper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Wrapper>;
    deployContract(
      name: "ERC4626",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC4626>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "EIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ShortStrings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "IAllowanceTransfer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAllowanceTransfer>;
    deployContract(
      name: "IDAIPermit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDAIPermit>;
    deployContract(
      name: "IEIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEIP712>;
    deployContract(
      name: "SafeCast160",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast160>;
    deployContract(
      name: "IIrm",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIrm>;
    deployContract(
      name: "IMorpho",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorpho>;
    deployContract(
      name: "IMorphoBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoBase>;
    deployContract(
      name: "IMorphoStaticTyping",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoStaticTyping>;
    deployContract(
      name: "IERC4626",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4626>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IMetaMorpho",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorpho>;
    deployContract(
      name: "IMetaMorphoBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorphoBase>;
    deployContract(
      name: "IMetaMorphoStaticTyping",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaMorphoStaticTyping>;
    deployContract(
      name: "IMulticall",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMulticall>;
    deployContract(
      name: "IOwnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "IPublicAllocator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPublicAllocator>;
    deployContract(
      name: "IPublicAllocatorBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPublicAllocatorBase>;
    deployContract(
      name: "IPublicAllocatorStaticTyping",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPublicAllocatorStaticTyping>;
    deployContract(
      name: "ErrorsLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ErrorsLib>;
    deployContract(
      name: "EventsLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EventsLib>;
    deployContract(
      name: "PublicAllocator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PublicAllocator>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IUniversalRewardsDistributor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniversalRewardsDistributor>;
    deployContract(
      name: "IUniversalRewardsDistributorBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniversalRewardsDistributorBase>;
    deployContract(
      name: "IUniversalRewardsDistributorStaticTyping",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniversalRewardsDistributorStaticTyping>;
    deployContract(
      name: "IUrdFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUrdFactory>;
    deployContract(
      name: "EventsLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EventsLib>;
    deployContract(
      name: "UniversalRewardsDistributor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UniversalRewardsDistributor>;
    deployContract(
      name: "UrdFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UrdFactory>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "BaseBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseBundler>;
    deployContract(
      name: "ChainAgnosticBundlerV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainAgnosticBundlerV2>;
    deployContract(
      name: "ERC20WrapperBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20WrapperBundler>;
    deployContract(
      name: "ERC4626Bundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC4626Bundler>;
    deployContract(
      name: "EthereumBundlerV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EthereumBundlerV2>;
    deployContract(
      name: "EthereumPermitBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EthereumPermitBundler>;
    deployContract(
      name: "EthereumStEthBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EthereumStEthBundler>;
    deployContract(
      name: "IDaiPermit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDaiPermit>;
    deployContract(
      name: "GoerliBundlerV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GoerliBundlerV2>;
    deployContract(
      name: "IMorphoBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMorphoBundler>;
    deployContract(
      name: "IMulticall",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMulticall>;
    deployContract(
      name: "IPublicAllocator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPublicAllocator>;
    deployContract(
      name: "IStEth",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStEth>;
    deployContract(
      name: "IWNative",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWNative>;
    deployContract(
      name: "IWstEth",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWstEth>;
    deployContract(
      name: "AaveV2MigrationBundlerV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AaveV2MigrationBundlerV2>;
    deployContract(
      name: "AaveV3MigrationBundlerV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AaveV3MigrationBundlerV2>;
    deployContract(
      name: "AaveV3OptimizerMigrationBundlerV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AaveV3OptimizerMigrationBundlerV2>;
    deployContract(
      name: "CompoundV2MigrationBundlerV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CompoundV2MigrationBundlerV2>;
    deployContract(
      name: "CompoundV3MigrationBundlerV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CompoundV3MigrationBundlerV2>;
    deployContract(
      name: "IAaveV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAaveV2>;
    deployContract(
      name: "IAaveV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAaveV3>;
    deployContract(
      name: "IAaveV3Optimizer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAaveV3Optimizer>;
    deployContract(
      name: "ICEth",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICEth>;
    deployContract(
      name: "ICompoundV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICompoundV3>;
    deployContract(
      name: "IComptroller",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IComptroller>;
    deployContract(
      name: "ICToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICToken>;
    deployContract(
      name: "MigrationBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MigrationBundler>;
    deployContract(
      name: "ERC20Mock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Mock>;
    deployContract(
      name: "ERC20PermitMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20PermitMock>;
    deployContract(
      name: "ERC20WrapperMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20WrapperMock>;
    deployContract(
      name: "ERC4626Mock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC4626Mock>;
    deployContract(
      name: "IrmMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IrmMock>;
    deployContract(
      name: "MorphoMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MorphoMock>;
    deployContract(
      name: "OracleMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OracleMock>;
    deployContract(
      name: "MorphoBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MorphoBundler>;
    deployContract(
      name: "Permit2Bundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Permit2Bundler>;
    deployContract(
      name: "PermitBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermitBundler>;
    deployContract(
      name: "SepoliaBundlerV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SepoliaBundlerV2>;
    deployContract(
      name: "StEthBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StEthBundler>;
    deployContract(
      name: "TransferBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TransferBundler>;
    deployContract(
      name: "UrdBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UrdBundler>;
    deployContract(
      name: "WNativeBundler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WNativeBundler>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
