/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUrdFactory,
  IUrdFactoryInterface,
} from "../../../../../lib/universal-rewards-distributor/src/interfaces/IUrdFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialTimelock",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "initialRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "initialIpfsHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "createUrd",
    outputs: [
      {
        internalType: "contract IUniversalRewardsDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "isUrd",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IUrdFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IUrdFactoryInterface {
    return new Interface(_abi) as IUrdFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IUrdFactory {
    return new Contract(address, _abi, runner) as unknown as IUrdFactory;
  }
}
