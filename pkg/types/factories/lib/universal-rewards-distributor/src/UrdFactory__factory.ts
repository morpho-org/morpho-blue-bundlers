/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  UrdFactory,
  UrdFactoryInterface,
} from "../../../../lib/universal-rewards-distributor/src/UrdFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialTimelock",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "initialRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "initialIpfsHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "createUrd",
    outputs: [
      {
        internalType: "contract IUniversalRewardsDistributor",
        name: "urd",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isUrd",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576114fc908161001c8239f35b600080fdfe6080604090808252600436101561001557600080fd5b600090813560e01c90816309bf1423146101905750638683fbdd1461003957600080fd5b3461018d5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018d576100706101f8565b9160243560443590606435608435908451936112a6948581019581871067ffffffffffffffff88111761016057908491610221823960808173ffffffffffffffffffffffffffffffffffffffff809c1698898152886020820152858b82015286606082015203019089f580156101565760209887911697888152808a522060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055855193845287840152848301526060820152837fb08f131b4d26f626f4bd2fa639786c2b37988240728dcb975897a27ddc87ddb260803393a451908152f35b86513d89823e3d90fd5b6024897f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b80fd5b905082346101f45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f45760ff9060209373ffffffffffffffffffffffffffffffffffffffff6101e56101f8565b16815280855220541615158152f35b8280fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361021b57565b600080fdfe60803461011057601f6112a638819003918201601f19168301916001600160401b03831184841017610115578084926080946040528339810103126101105780516001600160a01b0381169190829003610110576020810151907f980b903efea70e6b1bd235b1fb05f1a5da73cbd478b73c9538053f9eb29f129f602060606040840151930151938560018060a01b03196003541617600355604051906000967f50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe28880a2806005558152a1808355816001558260065582600755826008557f901232fc92ac16700a7d4b60706cbd27dec177bc85c9c2dbd2e2871d63b22a236040519380a361117a908161012c8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004908136101561001657600080fd5b600092833560e01c9081630c9cbf0e14610dd35750806313af403514610d075780631e891c0a14610c6c57806342af83fb14610b495780634b38705314610a905780634fdfb08614610a2a578063537394101461093b578063750588cf146108ed5780638da5cb5b1461089a578063c623674f1461085d578063d33219b414610820578063d61825ef146106b8578063ebf0c7171461067d578063ed075ec5146105b55763fabed412146100c957600080fd5b346105b15760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105b157610100610e44565b610108610e6c565b6044359360643567ffffffffffffffff9687821161048b573660238301121561048b57818301359780891161048e5760249260059036858c841b830101116105ad57908897916101979b8554918a519461016186610ec3565b600f865260209e8f967f726f6f74206973206e6f7420736574000000000000000000000000000000000088820152851515610fc9565b8d8c51908782019273ffffffffffffffffffffffffffffffffffffffff8091169d8e855216809e8301526060820152606081526101d381610f0e565b5190208c518681019182528681526101ea81610ec3565b5190209387955b838710610521575050505061023c925089519161020d83610ec3565b601883527f696e76616c69642070726f6f66206f72206578706972656400000000000000008d84015214610fc9565b84825260028952868220868352895261028e87832054891188519061026082610ec3565b601182527f636c61696d61626c6520746f6f206c6f770000000000000000000000000000008c830152610fc9565b848252600289528682208683528952868220548803978089116104f6579089918684526002835288842088855283528884205582808951848101907fa9059cbb00000000000000000000000000000000000000000000000000000000825289888201528c60448201526044815261030481610f0e565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648c519661033188610ec3565b8088528701525190828b5af13d156104e8573d8281116104bd578951927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81601f850116011684019084821090821117610492578a52825261039e9291903d858d84013e5b88611044565b8051918215918a8315610467575b5050509050156103e65750507ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683858451868152a351908152f35b90602a608492888751937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b91938180945001031261048e5788015190811515820361048b57508038808a6103ac565b80fd5b5080fd5b868660418a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85856041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b61039e929150606090610398565b50506011837f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b89878394959697931b85010135918281106000146105a1578952528b87205b947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105765760010194939291908e6101f1565b888860118c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b918952528b8720610540565b8380fd5b8280fd5b83823461048e57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048e5760085461063c916105ff6105f761100b565b831515610fc9565b519061060a82610ec3565b601782527f74696d656c6f636b206973206e6f7420657870697265640000000000000000006020830152421015610fc9565b60065460075490808355816001558260065582600755826008557f901232fc92ac16700a7d4b60706cbd27dec177bc85c9c2dbd2e2871d63b22a238380a380f35b83823461048e57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048e57602091549051908152f35b5090346105b1576106c836610e8f565b9290913385528060205260ff828620541680156107fa575b6106f2906106ec610f2a565b90610fc9565b60065483148015906107ee575b825161073d9161070e82610ec3565b600f82527f616c72656164792070656e64696e6700000000000000000000000000000000006020830152610fc9565b6005544201918242116107c2575167ffffffffffffffff6060820191821091111761079657508160065582600755600855337f922a2513428e5d51dd666942f04a14788d1db1ab35373059a8a29f025d6342cb8480a480f35b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024866011847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b506007548414156106ff565b506106f273ffffffffffffffffffffffffffffffffffffffff60035416331490506106e0565b83823461048e57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048e576020906005549051908152f35b83823461048e57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048e576020906001549051908152f35b83823461048e57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048e5760209073ffffffffffffffffffffffffffffffffffffffff600354169051908152f35b83823461048e57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048e5760609060065490600754906008549181519384526020840152820152f35b50346105b157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105b157610972610e44565b602435801515809103610a26577fefa819ca5209d17f1dfd20e7c0c2100700ae10239d28140f00fa620742b2d8429260209273ffffffffffffffffffffffffffffffffffffffff906109cc826003541633146106ec61110b565b16948587528084526109eb8360ff848a205416151514156106ec6110d2565b85875283528086207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff841617905551908152a280f35b8480fd5b5090346105b15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105b1578160209360ff9273ffffffffffffffffffffffffffffffffffffffff610a7f610e44565b168252855220541690519015158152f35b50346105b157827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105b15760ff91338452602052822054168015610b23575b610adf906106ec610f2a565b610aef60085415156106ec61100b565b806006558060075580600855337ffc5bc87b2339664e063f6f7cd154075756d9c3b2c38ca2b950fef2f8b3f6dc408280a280f35b50610adf73ffffffffffffffffffffffffffffffffffffffff6003541633149050610ad3565b5090346105b157610bdd610b5c36610e8f565b93909233865260205260ff81862054168015610c46575b610b7f906106ec610f2a565b84548314801590610c3a575b610b97906106ec6110d2565b60055415908115610c17575b5190610bae82610ec3565b601f82527f756e617574686f72697a656420746f206368616e67652074686520726f6f74006020830152610fc9565b808355816001558260065582600755826008557f901232fc92ac16700a7d4b60706cbd27dec177bc85c9c2dbd2e2871d63b22a238380a380f35b905073ffffffffffffffffffffffffffffffffffffffff60035416331490610ba3565b50600154841415610b8b565b50610b7f73ffffffffffffffffffffffffffffffffffffffff6003541633149050610b73565b5090346105b15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105b1577f980b903efea70e6b1bd235b1fb05f1a5da73cbd478b73c9538053f9eb29f129f916020913590610cea73ffffffffffffffffffffffffffffffffffffffff6003541633146106ec61110b565b610cfb6005548314156106ec6110d2565b8160055551908152a180f35b833461048b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048b57610da7610d42610e44565b7fffffffffffffffffffffffff000000000000000000000000000000000000000060035473ffffffffffffffffffffffffffffffffffffffff80821693610d92610d8a61110b565b863314610fc9565b16938493610d9e6110d2565b90851415610fc9565b16176003557f50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe28280a280f35b925050346105b157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105b157602092610e0f610e44565b610e17610e6c565b73ffffffffffffffffffffffffffffffffffffffff91821683526002865283832091168252845220548152f35b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610e6757565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610e6757565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040910112610e67576004359060243590565b6040810190811067ffffffffffffffff821117610edf57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6080810190811067ffffffffffffffff821117610edf57604052565b60405190610f3782610ec3565b601f82527f63616c6c657220686173206e6f7420746865207570646174657220726f6c65006020830152565b60208082528251818301819052939260005b858110610fb5575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201610f75565b15610fd15750565b611007906040519182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610f63565b0390fd5b6040519061101882610ec3565b600f82527f6e6f2070656e64696e6720726f6f7400000000000000000000000000000000006020830152565b919290156110bf5750815115611058575090565b3b156110615790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015610fd15750805190602001fd5b604051906110df82610ec3565b600b82527f616c7265616479207365740000000000000000000000000000000000000000006020830152565b6040519061111882610ec3565b601782527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000602083015256fea2646970667358221220d82c2d8151094638cb6c916d9de1f3915026dbb3eefb9e9406d78592bfaeb87664736f6c63430008130033a264697066735822122099b4476992d5d8aa7d81d51603dcd13b4bfc1d9d9fa867cf071354fc1109e7b164736f6c63430008130033";

type UrdFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UrdFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UrdFactory__factory extends ContractFactory {
  constructor(...args: UrdFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UrdFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UrdFactory__factory {
    return super.connect(runner) as UrdFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UrdFactoryInterface {
    return new Interface(_abi) as UrdFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UrdFactory {
    return new Contract(address, _abi, runner) as unknown as UrdFactory;
  }
}
