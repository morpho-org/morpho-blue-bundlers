/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  ConstantsLib,
  ConstantsLibInterface,
} from "../../../../../../lib/morpho-blue-irm/src/adaptive-curve-irm/libraries/ConstantsLib";

const _abi = [
  {
    inputs: [],
    name: "ADJUSTMENT_SPEED",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CURVE_STEEPNESS",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_RATE_AT_TARGET",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_RATE_AT_TARGET",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_RATE_AT_TARGET",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TARGET_UTILIZATION",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576101f29081610020823930815050f35b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c908163019ec38b146101855750806358f5cbad1461014d5780635a92fa85146101145780639a1a14d9146100d9578063d91042b5146100a25763fc4c2d541461006457600080fd5b817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261009e5760209051673782dace9d9000008152f35b5080fd5b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261009e5760209051634b9a1eff8152f35b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261009e5760209051670c7d713b49da00008152f35b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261009e5760209051650171268b5ad48152f35b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261009e5760209051640ec41a0ddf8152f35b8390817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261009e57806301e3da5f60209252f3fea26469706673582212200c0a084d17f5f6b0b775ff2bbc82c4f196c11c5c6a3c260672ea5084eb832c2364736f6c63430008180033";

type ConstantsLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstantsLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConstantsLib__factory extends ContractFactory {
  constructor(...args: ConstantsLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConstantsLib & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConstantsLib__factory {
    return super.connect(runner) as ConstantsLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantsLibInterface {
    return new Interface(_abi) as ConstantsLibInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConstantsLib {
    return new Contract(address, _abi, runner) as unknown as ConstantsLib;
  }
}
