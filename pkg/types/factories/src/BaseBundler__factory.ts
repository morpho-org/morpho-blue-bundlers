/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { BaseBundler, BaseBundlerInterface } from "../../src/BaseBundler";

const _abi = [
  {
    inputs: [],
    name: "initiator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class BaseBundler__factory {
  static readonly abi = _abi;
  static createInterface(): BaseBundlerInterface {
    return new Interface(_abi) as BaseBundlerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BaseBundler {
    return new Contract(address, _abi, runner) as unknown as BaseBundler;
  }
}
